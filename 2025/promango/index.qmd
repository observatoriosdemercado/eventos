---
title: "PRODUCCIÓN Y COMERCIALIZACIÓN DE MANGO EN BRASIL: FORTALEZAS Y DEBILIDADES"
author: "<br><br> JOÃO RICARDO F. DE LIMA <br><br> <br><br> PIURA-PERU, Agosto de 2025."
format: 
  revealjs:
    logo: "imgs/logo_embrapa.png" #https://www.remove.bg/pt-br/upload
    width: 1600
    height: 900
    slide-number: FALSE
    theme: serif
    css: estilos.css
    transition: fade
    toc: false
    progress: true
#/usr/local/bin/decktape reveal index.html presentation.pdf
# se for xaringa, trocar reveal por remark, mas antes precisa abrir o html open index.html
# pwd indica a pasta que está direcionado
# ls -l lista os arquivos da pasta atual
# cd .. volta para uma pasta anterior com espaco entre cd e  ..
# cd ~/Dropbox/Embrapa/2025/Eventos/Fruit\ Attraction/fruitsp2025 muda a pasta sendo que a \ é por causa do espaço
# se precisar abrir o html (erro de excesso de tempo) open index.html

---

## João Ricardo Lima  🇧🇷 {.center .aboutmeslide}

::: columns
::: {.column width="60%"}

-   Contactos

    -   Instagram: [\@jotaerre.econ](https://www.instagram.com/jotaerre.econ/)

    -   Email: [joao.ricardo@embrapa.br](joao.ricardo@embrapa.br)
    
    -   Linkedin: [Joao Ricardo Lima](https://www.linkedin.com/in/joao-ricardo-lima-7b6273240/)

-   Sobre mí

    -   Doctor en Economía Aplicada (UFV-MG)

    -   Investigador en Economia Rural de Embrapa Semiárido - Petrolina/PE
    
    -   Coordinador de los Observatorios de Mercado de Mango y Uva de Embrapa

:::

::: {.column width="40%"}
![](imgs/jotaerre.png){width=110%}
:::
:::

# PRODUCCIÓN DE MANGOS EN EL NORDESTE DE BRASIL

- PRODUCCIÓN INTENSIVA EN TECNOLOGIA 

- PRODUCCIÓN INTENSIVA EN MANO DE OBRA 

- PERFIL DE LA PRODUCCIÓN Y PRODUCTORES

- LA CADENA PRODUCTIVA DE MANGO

- ÁREAS Y VARIEDADES
 
## PRODUCCIÓN EN EL NORDESTE DE BRASIL

<br>

<div style="text-align: center;">
  <img src="imgs/seacon5.png" width="120%">
</div>

<br>

<div style="text-align: center;"> 
  <h2 style="color: #282f6b; font-size: 1.5em; margin-bottom: 20px;">
    AGUA DE RIEGO + MUCHAS HORAS DE SOL + TECNOLOGIA = PRODUCCIÓN EN LAS 52 SEMANAS DEL AÑO.
  </h2>
</div>


## PRODUCCIÓN INTENSIVA EN TECNOLOGIA 

<div style="text-align: center;">
  <img src="imgs/seacon6.png" width="120%">
</div>


## PRODUCCIÓN INTENSIVA EN MANO DE OBRA 

```{python peru1, echo=FALSE, out.width="100%"}
import pandas as pd
from plotnine import *
from mizani.formatters import date_format
import matplotlib.pyplot as plt

# Lendo os dados
dados1 = pd.read_csv('dados/junho_2025.csv', sep=';', decimal='.')

# Criando a coluna de datas
dados1['date'] = pd.date_range(start='2021-01-01', end='2025-06-01', freq='MS')

# Renomeando as colunas
dados1a = dados1.rename(columns={
    'Variavel': 'variable',
    'Proporcao': 'value'
})[['date', 'variable', 'value']]

# Gráfico
plot = (
    ggplot(dados1a) +
    geom_col(aes(x='date', y='value', fill='"variable"')) +
    scale_fill_manual(values=["gold"]) +
    geom_text(aes(x='date', y='value', label='value'), va='bottom', format_string='{:.0f}') +
    scale_y_continuous(n_breaks=10) +
    scale_x_datetime(
        breaks='1 month',
        labels=date_format('%m/%Y'),
        expand=(0, 0)
    ) +
    labs(
        y='Proporción Agro/Total (%)',
        x='Meses de los años',
        caption='Fuente: CAGED (2025). Datos reprocesados por el Observatorio de Mercado del Mango de Embrapa.'
    ) +
    theme_minimal() +
    theme(
        axis_text_x=element_text(angle=45, ha='right', size=9),
        axis_text_y=element_text(size=10),
        axis_title_x=element_text(size=14, weight='bold'),
        axis_title_y=element_text(size=14, weight='bold'),
        panel_grid_major=element_blank(),
        panel_grid_minor=element_blank(),
        plot_caption=element_text(ha='left', size=10),
        legend_title=element_blank(),
        legend_text=element_text(size=12),
        legend_position='none',
        figure_size=(12, 6)
    )
)

plot.show
```

## PERFIL DE LA PRODUCCIÓN Y PRODUCTORES

<div style="text-align: center;">
  <img src="imgs/perfil.png" width="90%">
</div>

## LA COMPLEJA CADENA PRODUCTIVA DE MANGO.

<div style="text-align: center;">
  <img src="imgs/seacon15.png" width="90%">
</div>

## ANÁLISIS DE LA PRODUCCIÓN DE MANGO  

#### Cada año aumentan las áreas cultivadas y la productividad en la región.

<div style="text-align: center;">
  <img src="imgs/manga4.png" width="80%">
</div>

Fuente: [CEPEA, 2025.](https://www.hfbrasil.org.br/br/revista/acessar/completo/edicao-de-dezembro-anuario-2024-2025.aspx)

## ANÁLISIS DE LA PRODUCCÍON DE MANGO  

<div style="text-align: center;">
  <img src="imgs/fig7.png" width="90%">
</div>


## FORTALEZAS Y DEBILIDADES {.center}

::: columns
::: {.column width="50%"}

-   Producción en las 52 semanas del año

-   Nivel elevado de tecnología aplicada a la producción de fruta

- Clima con abundancia de luz solar e irrigación con aguas del Rio Sao Francisco. 

:::

::: {.column width="50%"}

-  Costos de producción (tecnologia + mano de obra + logistica de transporte + "Costo Brasil")

- Climas extremos (causa enfermidades, reducción de productividad): exceso de lluvia en un corto periodo de tiempo o temperaturas muy altas;

- Áreas concentradas con las variedades Palmer y Tommy Atkins, y pocas áreas con la variedad Kent.

- Escasez de mano de obra disponible.

:::
:::

# COMERCIALIZACIÓN DE MANGOS 

- LA OFERTA

- DEMANDA 

- PRECIOS RECIBIDOS POR LOS PRODUCTORES

- EXPORTACIONES

## ANÁLISIS DE LA OFERTA DE MANGO  

#### En los últimos 10 años, la producción de mango prácticamente se ha duplicado.

```{python peru2, echo=FALSE, out.width="100%"}
from plotnine import *
import pandas as pd
import numpy as np

# Lendo os dados
dados2 = pd.read_excel("dados/tabela1.xlsx")
dados2["Ano"] = dados2["Ano"].astype(str)

# Gráfico
plot = (
    ggplot(dados2) +
    geom_col(aes(x='Ano', y='Manga / 1000'), fill="gold") +
    scale_y_continuous(breaks=[200, 400, 600, 800, 1000, 1200, 1400, 1600]) +
    labs(
        y='Mil Toneladas',
        x='Años',
        caption='Fuente: IBGE (2024). Datos reprocesados por el Observatorio de Mercado del Mango de Embrapa'
    ) +
    theme_minimal() +
    theme(
        axis_text_x=element_text(angle=45, ha='center', size=18),
        axis_text_y=element_text(size=18),
        axis_title_x=element_text(size=18, weight='bold'),
        axis_title_y=element_text(size=18, weight='bold'),
        panel_grid_major=element_blank(),
        panel_grid_minor=element_blank(),
        plot_caption=element_text(ha='left', size=16),
        legend_title=element_blank(),
        legend_text=element_text(size=8),
        legend_position='none',
        figure_size=(14, 6.5)
    )
)

plot.show

```

## ANÁLISIS DE LA DEMANDA DE MANGO 

```{python peru3, echo=FALSE, message=FALSE}
# Load the CSV file
data = pd.read_csv('dados/ipca_manga.csv', sep=';', decimal='.')

# Traduzir os meses do português para o inglês
meses_pt_en = {
    'jan': 'Jan', 'fev': 'Feb', 'mar': 'Mar', 'abr': 'Apr',
    'mai': 'May', 'jun': 'Jun', 'jul': 'Jul', 'ago': 'Aug',
    'set': 'Sep', 'out': 'Oct', 'nov': 'Nov', 'dez': 'Dec'
}

# Aplicar substituição
data['mes_en'] = data['mes'].str.lower().replace(meses_pt_en, regex=True)

# Converter para datetime
data['mes_en'] = pd.to_datetime(data['mes_en'], format='%b/%y')

# Criar o gráfico
plot = (
    ggplot(data, aes(x='mes_en', y='pe_manga')) +
    geom_line(color='darkblue', size=1.5) +
    labs(
        title='',
        x='Meses del Año',
        y='Peso en el presupuesto',
        caption='Fuente: IPCA/IBGE (2025). Datos reprocesados por el Observatorio de Mercado del Mango de Embrapa.'
    ) +
    scale_x_datetime(date_breaks='6 months', date_labels='%b/%y') +
    theme_minimal() +
    theme(
        figure_size=(14, 6.5),
        axis_title_y=element_text(size=14, face="bold"),
        axis_title_x=element_text(size=14, face="bold"),
        axis_text_x=element_text(rotation=45, hjust=1, size=14),
        axis_text_y=element_text(size=18),
        plot_caption=element_text(ha='left', size=12)
    )
)

# Mostrar o gráfico
plot.show()

```

## ANÁLISIS DE LA DEMANDA DE MANGO 

```{python peru4, echo=FALSE, message=FALSE}
import pandas as pd
from plotnine import (
    ggplot, aes, geom_col, theme_minimal, theme, element_text,
    labs, scale_fill_manual, position_dodge, geom_text
)

# Carregar os dados
df = pd.read_excel('dados/consumo_brasil.xlsx')

# Derreter (melt)
dados1m = df.melt(id_vars='Região', var_name='variable', value_name='value')

# Cores (hex para manter consistência)
mycolors2 = ["#006400", "#6CA6CD", "#FFA500"]  # darkgreen, ~lightblue3, orange

# Gráfico
plot = (
    ggplot(dados1m, aes(x='Região', y='value', fill='variable'))
    + geom_col(position=position_dodge(width=0.9))
    + scale_fill_manual(values=mycolors2)
    + labs(
        y="Consumo (kg) per cápita anual",
        x="Brasil y Regiones",
        title="",
        caption="Fuente: POF/IBGE (2025). Datos reprocesados por el Observatorio de Mercado del Mango de Embrapa"
    ) +
    theme_minimal()+
    theme(
        figure_size=(14, 6.5),
        axis_title_y=element_text(size=18, face="bold"),
        axis_title_x=element_text(size=18, face="bold"),
        axis_text_x=element_text(hjust=1, size=18),
        axis_text_y=element_text(size=18),
        plot_caption=element_text(ha='left', size=12),
        legend_position='bottom',
        legend_text=element_text(size=16),
        legend_title=element_text(text='')
    )
)

# Mostrar o gráfico
plot.show()

```

## PRECIOS RECIBIDOS POR LOS PRODUCTORES

```{python peru4, echo=FALSE, message=FALSE}
import pandas as pd
from pathlib import Path
import plotnine as p9
from mizani.formatters import number_format, date_format

# Caminho para os arquivos
data_dir = Path("/Users/jricardofl/Dropbox/tempecon/dados_manga")

df = (
    pd.read_csv(data_dir/'dados_manga_palmer_semana.csv', sep=';', decimal='.')
    .drop(columns=['produto', 'regiao', 'ano', 'semana'])
)

# Cria o intervalo de dados de 2012-01-07 ate a semana de 2025
date_range = pd.date_range(start='2012-01-01', end='2025-08-14', freq='W-SAT')

# Remove datas especificas (semana 53)
dates_to_remove = [pd.Timestamp('2016-12-31'), pd.Timestamp('2022-12-31')]
date_range = date_range[~date_range.isin(dates_to_remove)]

# Designa a date range como uma nova coluna
df['date'] = date_range[:len(df)]

df['date2'] = date_range[:len(df)]

# Configura a data como index
df = df.set_index('date')

# Carrega igpdi dataset
igpdi = (
    pd.read_csv(data_dir/'igpdi.csv', sep=';', decimal='.')
    .assign(date=df.index)
    .drop(columns=['ano', 'semana'])
    .set_index('date')
)

# Junta os DataFrames
tabela = df.join(igpdi, how='inner')

# Deflaciona a serie de preços de manga
indice_data_base = tabela.query("date == date.max()").igpdi.values[0]
tabela = tabela.assign(real=lambda x: (indice_data_base / x.igpdi) * x.preco)

# Criação da variável preco_palmer
preco_palmer = tabela['real']

# Estima a tendencia por média móvel
#trend_palmer = preco_palmer.rolling(window=52, center=True).mean()

# Gráfico

# Visualização de dados

plot = (
    p9.ggplot(tabela) +
    p9.aes(x="date2") + 
    p9.geom_line(p9.aes(y="real"), color="blue", size=1) + 
    scale_y_continuous(breaks=[1, 2, 3, 4, 5, 6, 7, 8]) +
    p9.scale_x_date(
        date_breaks="1 year", date_labels="%Y"
    ) +
    p9.labs(
        x="Semanas de cada año",
        y="Precio (ajustado por inflación) Mango Palmer (R$/kg)",
        caption="Fuente: CEPEA (2025). Datos reprocesados por el Observatorio del Mercado de Mango de Embrapa"
    ) +
    p9.theme_minimal() +
    p9.theme(
        axis_title_x=element_text(size=15, face="bold"),
        axis_title_y=element_text(size=16, face="bold"),
        axis_text_x=element_text(size=18),
        axis_text_y=element_text(size=18),
        legend_title=element_text(size=14),
        legend_text=element_text(size=12),
        plot_caption=element_text(ha='left', size=16),
        figure_size=(14, 6.5)
    )
)

# Mostra o gráfico
plot.show()
```

## PRECIOS RECIBIDOS POR LOS PRODUCTORES

```{python peru5, echo=FALSE, message=FALSE}
import pandas as pd
from pathlib import Path
import plotnine as p9
from mizani.formatters import number_format, date_format

# Caminho para os arquivos
data_dir = Path("/Users/jricardofl/Dropbox/tempecon/dados_manga")

df = (
    pd.read_csv(data_dir/'dados_manga_tommy_semana.csv', sep=';', decimal='.')
    .drop(columns=['produto', 'regiao', 'ano', 'semana'])
)

# Cria o intervalo de dados de 2012-01-07 ate a semana de 2025
date_range = pd.date_range(start='2012-01-01', end='2025-08-14', freq='W-SAT')

# Remove datas especificas (semana 53)
dates_to_remove = [pd.Timestamp('2016-12-31'), pd.Timestamp('2022-12-31')]
date_range = date_range[~date_range.isin(dates_to_remove)]

# Designa a date range como uma nova coluna
df['date'] = date_range[:len(df)]

df['date2'] = date_range[:len(df)]

# Configura a data como index
df = df.set_index('date')

# Carrega igpdi dataset
igpdi = (
    pd.read_csv(data_dir/'igpdi.csv', sep=';', decimal='.')
    .assign(date=df.index)
    .drop(columns=['ano', 'semana'])
    .set_index('date')
)

# Junta os DataFrames
tabela = df.join(igpdi, how='inner')

# Deflaciona a serie de preços de manga
indice_data_base = tabela.query("date == date.max()").igpdi.values[0]
tabela = tabela.assign(real=lambda x: (indice_data_base / x.igpdi) * x.preco)

# Criação da variável preco_palmer
preco_palmer = tabela['real']

# Estima a tendencia por média móvel
#trend_palmer = preco_palmer.rolling(window=52, center=True).mean()

# Gráfico

# Visualização de dados

plot = (
    p9.ggplot(tabela) +
    p9.aes(x="date2") + 
    p9.geom_line(p9.aes(y="real"), color="darkgreen", size=1) + 
    scale_y_continuous(breaks=[1, 2, 3, 4, 5, 6, 7, 8]) +
    p9.scale_x_date(
        date_breaks="1 year", date_labels="%Y"
    ) +
    p9.labs(
        x="Semanas de cada año",
        y="Precio (ajustado por inflación) Mango Tommy (R$/kg)",
        caption="Fuente: CEPEA (2025). Datos reprocesados por el Observatorio del Mercado de Mango de Embrapa"
    ) +
    p9.theme_minimal() +
    p9.theme(
        axis_title_x=element_text(size=15, face="bold"),
        axis_title_y=element_text(size=16, face="bold"),
        axis_text_x=element_text(size=18),
        axis_text_y=element_text(size=18),
        legend_title=element_text(size=14),
        legend_text=element_text(size=12),
        plot_caption=element_text(ha='left', size=16),
        figure_size=(14, 6.5)
    )
)

# Mostra o gráfico
plot.show()
```

## VENTAS EN EL MERCADO INTERNO {.center}

::: columns
::: {.column width="50%"}

- Destino de la mayor parte de la producción nacional (Mercado interno con casi 210 millones de personas). 

- Pero los brasileños no distinguen las variedades de mango. No saben qué es un mango de la variedad Palmer, Tommy Atkins o Kent.

- Tenemos muchas vezes una descoordinación entre oferta y demanda sin alternativas para procesamiento (mango congelado, deshidratado, pulpa de mango).

- Alta volatilidad de precios que recibe el productor.
:::

::: {.column width="50%"}
![](imgs/fig13.png){width=90%}
:::
:::

## VENTAS EN EL MERCADO INTERNO {.center}

::: columns
::: {.column width="50%"}

<br>

- El Mercado interno es muy grande. 

- Sin competencia internacional (producción nacional contínua las 52 semanas del año).

- Consumidores poco exigentes con la calidad del fruto o con poder adquisitivo insuficiente para comprar mangos de mayor calidad (más caros).

- Es necesario mejorar la calidad y la forma de comercialización del mango; por ejemplo, mediante mejores empaques/presentaciones y marketing.

- Complicaciones en la Cadena Productiva.

:::

::: {.column width="50%"}
![](imgs/fig15.png){width=95%}
:::
:::

## EXPORTACIONES BRASILEÑAS DE MANGO 

```{python peru7, echo=FALSE, message=FALSE}
import pandas as pd
from plotnine import *

# Carregar os dados
dados1 = pd.read_csv('dados/exportacoes_2012_2025.csv', sep=';', decimal='.')
# Garante os nomes das colunas (ajuste se o CSV já vier nomeado)
dados1.columns = ['Ano', 'Valor', 'Toneladas']

# Sequência de anos 2012..2025 (comprimento = número de linhas do arquivo)
dados1['Ano'] = pd.RangeIndex(start=2012, stop=2012 + len(dados1), step=1)

# Converte unidades para milhares apenas nas colunas numéricas desejadas
dados1[['Valor', 'Toneladas']] = dados1[['Valor', 'Toneladas']] / 1000

plot = (
    ggplot(dados1, aes(x='Ano'))
    # Barras: Mil Toneladas
+ geom_col(aes(y='Toneladas', fill='"Mil toneladas"'), width=0.8, show_legend=True)
+ geom_line(aes(y='Valor', color='"Millones de dólares"'), size=2.2, show_legend=True)
+ scale_fill_manual(name='', values={'Mil toneladas': '#FFD700'})
+ scale_color_manual(name='', values={'Millones de dólares': '#FF0000'})
    + guides(fill=guide_legend(order=1), color=guide_legend(order=2))
    # Eixos, rótulos e quebras
    + scale_x_continuous(breaks=range(2012, 2026))
    + labs(
    x='Años',
    y='US$ Millones / Mil Toneladas',
    title='',
    caption='Fuente: COMEXSTAT (2025). Datos reprocesados por el Observatorio de Mercado del Mango de Embrapa\n'
            'Obs.: Datos hasta el mes de julio de 2025.'
    )
    + theme_minimal()
    + theme(
        legend_position='bottom',
        legend_title=element_blank(),
        legend_text=element_text(size=18),
        axis_title_x=element_text(weight='bold', size=18),
        axis_title_y=element_text(weight='bold', size=18),
        axis_text_x=element_text(size=18),
        axis_text_y=element_text(size=18),
        plot_caption=element_text(ha='left', size=18),
        figure_size=(14, 6.5)
    )
)

plot.show

```

## EXPORTACIONES BRASILEÑAS DE MANGO 

```{python peru8, echo=FALSE, message=FALSE}
# pip install pandas plotnine
import pandas as pd
from plotnine import *

# --- 1) Ler dados e preparar ---
df = pd.read_csv('dados/total_exporta_br.csv', sep=';', decimal='.')  # troque decimal=',' se precisar

# nomes esperados: ano, mes, valor, quilo
df.columns = [c.strip().lower() for c in df.columns]

# quilo → mil toneladas
df['toneladas'] = df['quilo'] / 1000000

# meses em PT-BR (ordem correta)
mes_map = {
    1:'enero', 2:'febrero', 3:'marzo', 4:'abril', 5:'mayo', 6:'junio',
    7:'julio', 8:'agosto', 9:'septiembre', 10:'octubre', 11:'noviembre', 12:'diciembre'
}

ordem_meses = [mes_map[m] for m in range(1,13)]
df['Mes'] = df['mes'].map(mes_map)
df['Mes'] = pd.Categorical(df['Mes'], categories=ordem_meses, ordered=True)

# --- 2) Média mensal (2012–2024) ---
media_1224 = (
    df.query('2012 <= ano <= 2024')
      .groupby('Mes', as_index=False)['toneladas']
      .mean()
      .rename(columns={'toneladas':'Media_2012_2024'})
)

# --- 3) Dados das barras (2023, 2024, 2025) ---
bars = df[df['ano'].isin([2023, 2024, 2025])].copy()
bars['AnoLabel'] = bars['ano'].astype(str)  # '2023','2024','2025'

# --- 4) Cores (ajuste se quiser chegar 100% no seu palette) ---
cores_barras = {'2023': '#9ecae1', '2024': '#6b6b6b', '2025': '#FFD700'}  # azul claro, cinza, amarelo
cor_linha   = {'Media (2012–2024)': '#F2672b'}  # laranja

plot = (
    ggplot()
    # Barras
    + geom_col(
        mapping=aes(x='Mes', y='toneladas', fill='AnoLabel'),
        data=bars,
        position=position_dodge(width=0.8),
        width=0.75,
        show_legend=True
    )
    # Linha média 2012–2024
    + geom_line(
        mapping=aes(x='Mes', y='Media_2012_2024', group=1, color='"Media (2012–2024)"'),
        data=media_1224,
        size=1.8,
        show_legend=True
    )
    + geom_point(
        mapping=aes(x='Mes', y='Media_2012_2024', color='"Media (2012–2024)"'),
        data=media_1224,
        size=2.2,
        show_legend=False
    )
    + scale_fill_manual(name='', values={'2023':'#9ecae1','2024':'#6b6b6b','2025':'#FFD700'})
    + scale_color_manual(name='', values={'Media (2012–2024)':'#F2672b'})
+ labs(
    x='Meses del año',
    y='Mil Toneladas',
    caption='Fuente: COMEXSTAT (2025). Datos reprocesados por el Observatorio de Mercado del Mango de Embrapa\n'
            'Nota: Datos hasta el mes de julio de 2025.'
)

    + theme_minimal()    
    + theme(
        legend_position='bottom',
        legend_title=element_blank(),
        legend_text=element_text(size=18),
        axis_title_x=element_text(weight='bold', size=18),
        axis_title_y=element_text(weight='bold', size=18),
        axis_text_x=element_text(size=16),
        axis_text_y=element_text(size=18),
        plot_caption=element_text(ha='left', size=18),
        figure_size=(14, 6.5)
    )
)


plot.show()
```

## EXPORTACIONES BRASILEÑAS DE MANGO 

```{python peru9, echo=FALSE, message=FALSE}
# pip install pandas plotnine openpyxl
import pandas as pd
from plotnine import *
import numpy as np

# 1) Leer el archivo (ajusta la ruta si es necesario)
df = pd.read_excel('dados/exportaçoes_semanais_manga.xlsx')
df.columns = [str(c).strip() for c in df.columns]

# 2) Asegurar numéricos y construir el total Europa+Reino Unido
for c in ['Europa', 'Reino Unido']:
    df[c] = pd.to_numeric(df[c], errors='coerce')

df['Total_cont'] = df['Europa'].fillna(0) + df['Reino Unido'].fillna(0)

# 3) Mantener solo año (Data) y semana (Semanas) válidos
df['Data'] = pd.to_numeric(df['Data'], errors='coerce')
df['Semanas'] = pd.to_numeric(df['Semanas'], errors='coerce')
df = df.dropna(subset=['Data','Semanas'])

# 4) Agregar por semana (por si hubiera duplicados) y preparar 2024 y 2025
base24 = (
    df[df['Data'] == 2024]
      .groupby('Semanas', as_index=False)['Total_cont'].sum()
      .rename(columns={'Total_cont':'total_2024'})
)

base25 = (
    df[df['Data'] == 2025]
      .groupby('Semanas', as_index=False)['Total_cont'].sum()
      .rename(columns={'Total_cont':'total_2025'})
)

# 5) Unir SOLO semanas comparables (intersección) y limitar a 1–31
comp = pd.merge(base25, base24, on='Semanas', how='inner')
comp = comp[comp['Semanas'].between(1, 31)].sort_values('Semanas')

# 6) Variación porcentual 2025 vs 2024
comp['var_pct'] = (comp['total_2025'] - comp['total_2024']) / comp['total_2024'] * 100
# evitar división por cero
comp.loc[comp['total_2024'] == 0, 'var_pct'] = np.nan
comp = comp.dropna(subset=['var_pct'])

# 7) Gráfico (plotnine)
AZUL_PRODUCTOR = "blue"  # reemplaza por tu azul exacto

plot = (
    ggplot(comp, aes(x='Semanas', y='var_pct'))
    + geom_col(width=0.8, fill=AZUL_PRODUCTOR)
    + geom_hline(yintercept=0, linetype='dashed', size=1)
    + scale_x_continuous(breaks=range(1, 32))
    + scale_y_continuous(labels=lambda l: [f'{v:.0f}%' for v in l])
    + labs(
        title='',
        x='Semanas del año',
        y='Variación interanual (%) de contenedores exportados — 2025 vs 2024',
        caption='Fuente: COMEXSTAT (2025). Datos reprocesados por el Observatorio de Mercado del Mango de Embrapa.\n'
                'Nota: Comparación realizada solo para semanas 1–31.'
    )
    + theme_minimal()
    + theme(
        legend_position='none',
        axis_title_x=element_text(weight='bold', size=18),
        axis_title_y=element_text(weight='bold', size=12),
        axis_text_x=element_text(size=18),
        axis_text_y=element_text(size=18),
        plot_caption=element_text(ha='left', size=16),
        figure_size=(14, 6.5)
    )
)

# Mostrar / guardar
plot.show()

```

## EXPORTACIONES BRASILEÑAS DE MANGO 

```{python peru10, echo=FALSE, message=FALSE}
# pip install pandas plotnine openpyxl
import pandas as pd
from plotnine import *

# --- 1) Ler (ajuste o caminho do seu .xlsx) ---
df = pd.read_excel('dados/destinos_2425.xlsx')
df.columns = ['Paises', '2024', '2025']

# (opcional) padronizar nomes em espanhol
df['Paises'] = df['Paises'].replace({
    'Paises Bajos':'Países Bajos',
    'Espanha':'España',
    'Canada':'Canadá',
    'Coreia do Sul':'Corea del Sur',
    'Estados Unidos':'EE.UU.'
})

# 1) escolha automática do nome da coluna (com ou sem acento)
col = 'Países' if 'Países' in df.columns else 'Paises'

# 3) ordem desejada
orden = ['Países Bajos','España','EE.UU.','Reino Unido','Portugal',
         'Canadá','Chile','Corea del Sur','Argentina']

# 4) definir como categórica ordenada
df[col] = pd.Categorical(df[col], categories=orden, ordered=True)

# Ordenar por 2025 (más reciente)
#df = df.sort_values('2024', ascending=False).reset_index(drop=True)

# Derreter (melt)
dados1m = df.melt(id_vars='Paises', var_name='variable', value_name='value')

# Cores (hex para manter consistência)
mycolors2 = ["#006400", "#FFA500"]  # darkgreen,  orange

# Gráfico
plot = (
    ggplot(dados1m, aes(x='Paises', y='value', fill='variable'))
    + geom_col(position=position_dodge(width=0.9))+
    geom_text(aes(x='Paises', y='value', label='value'), position=position_dodge(0.9), va='bottom', format_string='{:.0f}',
    size=14) 
    + scale_fill_manual(values=mycolors2)
    + labs(
        y="Participación (%)",
        x="Países",
        title="",
        caption="Fuente: COMEXSTAT (2025). Datos reprocesados por el Observatorio de Mercado del Mango de Embrapa"
    ) +
    theme_minimal()+
    theme(
        figure_size=(14, 6.5),
        axis_title_y=element_text(size=18, weight="bold"),
        axis_title_x=element_text(size=18, weight="bold"),
        axis_text_x=element_text(hjust=0.5, size=15),
        axis_text_y=element_text(size=18),
        plot_caption=element_text(ha='left', size=16),
        legend_position='bottom',
        legend_text=element_text(size=16),
        legend_title=element_text(text='')
    )
)

# Mostrar o gráfico
plot.show()

```

## EXPORTACIONES BRASILEÑAS DE MANGO 

```{python peru6, echo=FALSE, message=FALSE}
import pandas as pd
from plotnine import (
    ggplot, aes, geom_line, labs, scale_color_manual,
    scale_x_continuous, scale_y_continuous, theme_minimal, theme, element_text
)

# Carregar os dados
df = pd.read_csv('dados/brasil_peru.csv', sep=';', decimal='.')

# Reorganizar para formato longo (long format)
df_long = pd.melt(
    df,
    id_vars='ano',
    value_vars=['Brasil', 'Peru'],
    var_name='País',
    value_name='Toneladas'
)

# Nova coluna em mil toneladas
df_long['Mil_Toneladas'] = df_long['Toneladas'] / 1000

# Gráfico com legenda e cores corretas
plot = (
    ggplot(df_long, aes(x='ano', y='Mil_Toneladas', color='País')) +
    geom_line(size=2) +
    scale_color_manual(values={'Brasil': 'darkgreen', 'Peru': 'red'}) +
    labs(
        title='',
        x='Años',
        y='Mil Toneladas',
        color='País',
        caption='Fuente: FAOSTAT (2025) y SUNAT/PROMPERÚ (2025). Datos reprocesados por el Observatorio del Mango de Embrapa.'
    ) +
    scale_x_continuous(breaks=range(1980, 2025, 4)) +
    scale_y_continuous(breaks=range(0, 351, 50)) +
    theme_minimal() +
    theme(
        axis_title_x=element_text(size=18, face="bold"),
        axis_title_y=element_text(size=18, face="bold"),
        axis_text_x=element_text(size=18),
        axis_text_y=element_text(size=18),
        legend_title=element_text(size=16),
        legend_text=element_text(size=18),
        plot_caption=element_text(ha='left', size=16),
        figure_size=(14, 6.5)
    )
)

plot.show()


```

## EXPORTACIONES BRASIL-EE.UU. DE MANGO 

::: columns
::: {.column width="50%"}

<br>

- 2 de abril de 2025: Trump anuncia un arancel básico del 10% sobre las importaciones de casi todos los países, incluido Brasil. La medida entra en vigor el 5 de abril.

- 9 de julio de 2025: Se anuncia un arancel adicional del 40% sobre los productos brasileños, elevando la carga total (50%) a partir del 1 de agosto de 2025.

- Los exportadores brasileños de mango deciden que realizarán envíos a Estados Unidos.

:::

::: {.column width="50%"}

<br>

- 31 de julio de 2025: La aplicación de estos aranceles se pospone hasta el 6 de agosto, según decisión ejecutiva.

- En la edición de la orden, Trump incluyó una lista de aproximadamente 700 productos excluidos del nuevo arancel — como aeronaves civiles, partes de aviones, jugo de naranja, energía y fertilizantes—.

- 6 de agosto de 2025: Inicio de la aplicación de los aranceles, incluyendo las exportaciones de mango.

:::
:::

## EXPORTACIONES BRASIL-EE.UU. DE MANGO 

```{python peru12, echo=FALSE, message=FALSE}
import pandas as pd
from plotnine import *

# Carregar os dados
df = pd.read_csv('dados/previsao_2425.csv', sep=';')

# Remover as colunas indesejadas
df = df.drop(columns=["Proyección de Embarques en Cajas 2024", 
                      "Proyección de Embarques en Cajas 2025"])
                      
# Reorganizar para formato longo (long format)
df_long = pd.melt(
    df,
    id_vars='semanas',
    value_vars=['Proyección de Embarques en Contenedores 2024', 'Proyección de Embarques en Contenedores 2025'],
    var_name='Año',
    value_name='Cantidad de Contenedores'
)

# Gráfico com legenda e cores corretas
plot = (
    ggplot(df_long, aes(x='semanas', y='Cantidad de Contenedores', color='Año')) +
    geom_line(size=2) +
    scale_color_manual(values={'Proyección de Embarques en Contenedores 2024': 'darkgreen', 'Proyección de Embarques en Contenedores 2025': 'red'}) +
    labs(
        title='',
        x='Semanas',
        y='Cantidad de Contenedores',
        color='Año',
        caption='Fuente: Valexport (2025) y Mango Board (2025). Datos reprocesados por el Observatorio del Mango de Embrapa.'
    ) +
   scale_x_continuous(breaks=range(31, 50, 1)) +
   scale_y_continuous(breaks=range(0, 300, 25)) +
    theme_minimal() +
    theme(
        axis_title_x=element_text(size=18, face="bold"),
        axis_title_y=element_text(size=18, face="bold"),
        axis_text_x=element_text(size=18),
        axis_text_y=element_text(size=18),
        legend_position='bottom',
        legend_text=element_text(size=16),
        legend_title=element_text(text=''),
        plot_caption=element_text(ha='left', size=16),
        figure_size=(14, 6.5)
    )
)

# valores nos picos conhecidos
y36_2025 = float(
    df.loc[df['semanas'] == 36,
           'Proyección de Embarques en Contenedores 2025'].iloc[0]
)
y40_2024 = float(
    df.loc[df['semanas'] == 40,
           'Proyección de Embarques en Contenedores 2024'].iloc[0]
)

# dataframes para os rótulos
df_lab25 = pd.DataFrame({
    'semanas': [36],
    'Cantidad de Contenedores': [y36_2025],
    'lbl': [f'Máximo proyectado 2025\nsemana 36: {y36_2025:.0f}']
})
df_lab24 = pd.DataFrame({
    'semanas': [40],
    'Cantidad de Contenedores': [y40_2024],
    'lbl': [f'Máximo proyectado 2024\nsemana 40: {y40_2024:.0f}']
})

# adicionar as duas anotações (sem herdar o mapeamento de cor do plot)
plot = (
    plot
    # 2025 - vermelho
    + geom_point(data=df_lab25, mapping=aes(x='semanas', y='Cantidad de Contenedores'),
                 size=3, color='red', inherit_aes=False, show_legend=False)
    + geom_text(data=df_lab25, mapping=aes(x='semanas', y='Cantidad de Contenedores', label='lbl'),
                nudge_x=0.3, nudge_y=15, size=13, color='red',
                inherit_aes=False, show_legend=False)
    # 2024 - verde
    + geom_point(data=df_lab24, mapping=aes(x='semanas', y='Cantidad de Contenedores'),
                 size=3, color='darkgreen', inherit_aes=False, show_legend=False)
    + geom_text(data=df_lab24, mapping=aes(x='semanas', y='Cantidad de Contenedores', label='lbl'),
                nudge_x=0.3, nudge_y=15, size=13, color='darkgreen',
                inherit_aes=False, show_legend=False)
)

plot.show()


```


## EXPORTACIONES BRASIL-EE.UU. DE MANGO 

::: columns
::: {.column width="60%"}

<br>

- Se proyecta un incremento cercano al 10%, de 1.900 a 2.100 contenedores. 

- En 2025, el pico de envíos está proyectado para ocurrir en la semana 36, a diferencia de 2024, cuando el pico estaba proyectado para la semana 40.

- Aprovechando los precios más altos como consecuencia de la reducción de los volúmenes exportados por México al cierre de la temporada.

:::

::: {.column width="40%"}

![](imgs/hidro.jpg){width=85%}

:::
:::

## EXPORTACIONES BRASIL-EE.UU. DE MANGO 

```{python peru13, echo=FALSE, message=FALSE}
import pandas as pd
from numpy import arange
import math
from datetime import date
from dateutil.relativedelta import relativedelta
import requests

from plotnine import (
    ggplot, aes, geom_line, geom_point, geom_text, annotate,
    scale_x_date, scale_y_continuous, labs, theme_minimal, theme
)
from plotnine.themes.elements import element_text

# --- Parâmetros de período (últimos 12 meses até hoje) ---
hoje = date.today()
inicio = hoje - relativedelta(months=12)
fmt = "%d/%m/%Y"

# --- Série SGS (PTAX venda diária = 1) ---
url = (f"https://api.bcb.gov.br/dados/serie/bcdata.sgs.1/dados"
       f"?formato=json&dataInicial={inicio.strftime(fmt)}&dataFinal={hoje.strftime(fmt)}")

# --- Baixa e prepara dados ---
resp = requests.get(url, timeout=30)
resp.raise_for_status()
df = pd.DataFrame(resp.json())
df["data"]  = pd.to_datetime(df["data"], format="%d/%m/%Y")
df["valor"] = pd.to_numeric(df["valor"].str.replace(",", ".", regex=False))
df = df.sort_values("data").reset_index(drop=True)

# --- fun: pega a data disponível mais próxima ---
def get_nearest(df, date_str):
    d = pd.to_datetime(date_str)
    i = (df["data"] - d).abs().idxmin()
    return df.loc[i, "data"], df.loc[i, "valor"]

# Datas-alvo
eleicao, v_eleicao = get_nearest(df, "2024-11-05")
t10, v_t10         = get_nearest(df, "2025-04-02")
t50, v_t50         = get_nearest(df, "2025-07-09")
# nova data: posse (toma de posesión)
tpos, v_tpos = get_nearest(df, "2025-01-20")
# Último debate antes das eleições (1º de outubro de 2024)
ult_debate, v_ult_debate = get_nearest(df, "2024-10-01")

# Quebras do eixo Y: de 0,10 em 0,10
min_break = math.floor(df["valor"].min()*10)/10
max_break = math.ceil(df["valor"].max()*10)/10
breaks_ = arange(min_break, max_break+0.1, 0.10)

# Helper p/ formatar decimal com vírgula no label
fmt_pt = lambda v: f"{v:.2f}".replace(".", ",")

plot = (
    ggplot(df, aes("data", "valor"))
    + geom_line(color="red", size=1.2)

    # pontos-âncora nas três datas
    + geom_point(aes(x=eleicao, y=v_eleicao), size=2.5)
    + geom_point(aes(x=t10,     y=v_t10),     size=2.5)
    + geom_point(aes(x=t50,     y=v_t50),     size=2.5)
    + geom_point(aes(x=tpos, y=v_tpos), size=2.5)
    # ponto
    + geom_point(aes(x=ult_debate, y=v_ult_debate), size=2.5)
    # textos estilo “callout” (sem linhas verticais)
    + geom_text(aes(x=eleicao, y=v_eleicao),
                label=f"Elección EUA\n{fmt_pt(v_eleicao)}", nudge_y=0.12, ha="left", size=15)
    + geom_text(aes(x=t10, y=v_t10),
                label=f"Arancele 10%\n{fmt_pt(v_t10)}", nudge_y=0.12, ha="left", size=15)
    + geom_text(aes(x=t50, y=v_t50),
                label=f"Arancele 50%\n{fmt_pt(v_t50)}", nudge_y=0.12, ha="left", size=15)
    + geom_text(aes(x=tpos, y=v_tpos),
            label=f"Toma de posesión\n{fmt_pt(v_tpos)}", nudge_y=0.12, ha="left", size=15)# texto estilo callout
    + geom_text(
    aes(x=ult_debate, y=v_ult_debate),
    label=f"Último debate K x T\n{fmt_pt(v_ult_debate)}",
    nudge_y=0.12, ha="left", size=15
)
    # setinhas discretas (opcional — comente se não quiser)
    + annotate("segment", x=eleicao, xend=eleicao, y=v_eleicao+0.10, yend=v_eleicao+0.02, alpha=0.7)
    + annotate("segment", x=t10,     xend=t10,     y=v_t10+0.10,     yend=v_t10+0.02,     alpha=0.7)
    + annotate("segment", x=t50,     xend=t50,     y=v_t50+0.10,     yend=v_t50+0.02,     alpha=0.7)
    # (opcional) setinha discreta
  + annotate("segment", x=tpos, xend=tpos, y=v_tpos+0.10, yend=v_tpos+0.02, alpha=0.7)
  # setinha opcional
  + annotate(
    "segment",
    x=ult_debate, xend=ult_debate,
    y=v_ult_debate+0.10, yend=v_ult_debate+0.02,
    alpha=0.7
)
    + scale_x_date(date_breaks="1 month", date_labels="%b/%Y")
    + scale_y_continuous(
        breaks=breaks_,
        labels=lambda l: [fmt_pt(v) for v in l]
    )
    + labs(
        x="Meses del año",
        y="Tipo de cambio real (R$/US$)",
        title="",
        caption="Fuente: Banco Central do Brasil (SGS 1 — PTAX venta diaria). Datos reprocesados por el Observatorio del Mango de Embrapa."
    )
    + theme_minimal()
    + theme(
        axis_title_x=element_text(size=18, face="bold"),
        axis_title_y=element_text(size=18, face="bold"),
        axis_text_y=element_text(size=18, face="bold"),
        axis_text_x=element_text(angle=45, ha='center', size=16),
        plot_title=element_text(size=14, weight="bold"),
        plot_caption=element_text(ha='left', size=16),
        figure_size=(14, 6.5)
    )
)

plot.show()
```


## DESAFÍOS CLAVE EN EL NUEVO CONTEXTO

<br>

### Reducir la brecha entre la oferta y la demanda

- **Aumentar el consumo interno**.
- Vender em **nuevos mercados**.
- Organizar mejor la **distribución del volumen** ao longo del año.
- Conseguir alternativas para **generación de valor**. 

### Reducir los costos de produçción (y costo Brasil) para aumentar la competitividad

- ¿Hasta cuándo seguirá depreciándose el dólar?"

### Gestionar el negocio de forma profesional.

- No existen muchos datos de mercado disponibles para el cultivo del mango.

## {.center .thankslide}

::: columns
::: {.column width="50%"}

<div style="text-align: center;">
  <img src="imgs/promango.png" width="45%">
</div>


:::
::: {.column width="50%"}

<div style="text-align: center;">
  <img src="imgs/logo_manga.png" width="60%">
</div>

:::
:::

 <div style="text-align: center;"> 
  <h2 style="color: #282f6b; font-size: 2em; margin-bottom: 20px;">
    GRACIAS POR SU ATENCIÓN!
  </h2>
  <br>
  <!-- This part will have a smaller font size -->
  <p style="font-size: 0.8em; color: #333;">
    <a href="https://www.embrapa.br/observatorio-da-manga" target="_blank">
      https://www.embrapa.br/observatorio-da-manga
    </a>
    <br>
    <a href="https://www.embrapa.br/observatorio-da-uva" target="_blank">
      https://www.embrapa.br/observatorio-da-uva
    </a>
    <br>
📲 **WhatsApp:** <br>
+55 87 99961-5799  
  </p>
  <br>
  <img src="imgs/apoio2.png" width="23%">
</div>


